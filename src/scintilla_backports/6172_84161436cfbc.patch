# HG changeset patch
# User Neil <nyamatongwe@gmail.com>
# Date 1491550081 -36000
# Node ID 84161436cfbc309da3b30e6fe5bc69c0a9331cfa
# Parent  99e46ea84433f95e568fb9fdc7d4a92869e823ab
Use same parameter names in declarations and definitions.

diff -r 99e46ea84433 -r 84161436cfbc gtk/PlatGTK.cxx
--- a/gtk/PlatGTK.cxx	Fri Apr 07 17:08:55 2017 +1000
+++ b/gtk/PlatGTK.cxx	Fri Apr 07 17:28:01 2017 +1000
@@ -1505,13 +1505,13 @@
 		GTK_WINDOW(top));
 }
 
-void ListBoxX::SetFont(Font &scint_font) {
+void ListBoxX::SetFont(Font &font) {
 	// Only do for Pango font as there have been crashes for GDK fonts
-	if (Created() && PFont(scint_font)->pfd) {
+	if (Created() && PFont(font)->pfd) {
 		// Current font is Pango font
 #if GTK_CHECK_VERSION(3,0,0)
 		if (cssProvider) {
-			PangoFontDescription *pfd = PFont(scint_font)->pfd;
+			PangoFontDescription *pfd = PFont(font)->pfd;
 			std::ostringstream ssFontSetting;
 			ssFontSetting << "GtkTreeView, treeview { ";
 			ssFontSetting << "font-family: " << pango_font_description_get_family(pfd) <<  "; ";
@@ -1532,7 +1532,7 @@
 				ssFontSetting.str().c_str(), -1, NULL);
 		}
 #else
-		gtk_widget_modify_font(PWidget(list), PFont(scint_font)->pfd);
+		gtk_widget_modify_font(PWidget(list), PFont(font)->pfd);
 #endif
 		gtk_cell_renderer_text_set_fixed_height_from_font(GTK_CELL_RENDERER_TEXT(renderer), -1);
 		gtk_cell_renderer_text_set_fixed_height_from_font(GTK_CELL_RENDERER_TEXT(renderer), 1);
@@ -1918,14 +1918,14 @@
 }
 #endif
 
-void Menu::Show(Point pt, Window &wnd) {
+void Menu::Show(Point pt, Window &w) {
 	GtkMenu *widget = static_cast<GtkMenu *>(mid);
 	gtk_widget_show_all(GTK_WIDGET(widget));
 #if GTK_CHECK_VERSION(3,22,0)
 	// Rely on GTK+ to do the right thing with positioning
 	gtk_menu_popup_at_pointer(widget, NULL);
 #else
-	GdkRectangle rcMonitor = MonitorRectangleForWidget(PWidget(wnd.GetID()));
+	GdkRectangle rcMonitor = MonitorRectangleForWidget(PWidget(w.GetID()));
 	GtkRequisition requisition;
 #if GTK_CHECK_VERSION(3,0,0)
 	gtk_widget_get_preferred_size(GTK_WIDGET(widget), NULL, &requisition);
diff -r 99e46ea84433 -r 84161436cfbc gtk/ScintillaGTK.h
--- a/gtk/ScintillaGTK.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/gtk/ScintillaGTK.h	Fri Apr 07 17:28:01 2017 +1000
@@ -135,7 +135,7 @@
 	void GetGtkSelectionText(GtkSelectionData *selectionData, SelectionText &selText);
 	void ReceivedSelection(GtkSelectionData *selection_data);
 	void ReceivedDrop(GtkSelectionData *selection_data);
-	static void GetSelection(GtkSelectionData *selection_data, guint info, SelectionText *selected);
+	static void GetSelection(GtkSelectionData *selection_data, guint info, SelectionText *text);
 	void StoreOnClipboard(SelectionText *clipText);
 	static void ClipboardGetSelection(GtkClipboard* clip, GtkSelectionData *selection_data, guint info, void *data);
 	static void ClipboardClearSelection(GtkClipboard* clip, void *data);
@@ -197,7 +197,7 @@
 	static AtkObject* GetAccessible(GtkWidget *widget);
 
 	bool KoreanIME();
-	void CommitThis(char *str);
+	void CommitThis(char *commitStr);
 	static void Commit(GtkIMContext *context, char *str, ScintillaGTK *sciThis);
 	void PreeditChangedInlineThis();
 	void PreeditChangedWindowedThis();
@@ -238,7 +238,7 @@
 #if GTK_CHECK_VERSION(3,0,0)
 	static gboolean DrawCT(GtkWidget *widget, cairo_t *cr, CallTip *ctip);
 #else
-	static gboolean ExposeCT(GtkWidget *widget, GdkEventExpose *ose, CallTip *ct);
+	static gboolean ExposeCT(GtkWidget *widget, GdkEventExpose *ose, CallTip *ctip);
 #endif
 	static gboolean PressCT(GtkWidget *widget, GdkEventButton *event, ScintillaGTK *sciThis);
 
diff -r 99e46ea84433 -r 84161436cfbc gtk/ScintillaGTKAccessible.h
--- a/gtk/ScintillaGTKAccessible.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/gtk/ScintillaGTKAccessible.h	Fri Apr 07 17:28:01 2017 +1000
@@ -109,7 +109,7 @@
 	gboolean SetCaretOffset(int charOffset);
 	gint GetOffsetAtPoint(gint x, gint y, AtkCoordType coords);
 	void GetCharacterExtents(int charOffset, gint *x, gint *y, gint *width, gint *height, AtkCoordType coords);
-	AtkAttributeSet *GetAttributesForStyle(unsigned int style);
+	AtkAttributeSet *GetAttributesForStyle(unsigned int styleNum);
 	AtkAttributeSet *GetRunAttributes(int charOffset, int *startChar, int *endChar);
 	AtkAttributeSet *GetDefaultAttributes();
 	gint GetNSelections();
@@ -120,14 +120,14 @@
 	// for AtkEditableText
 	bool InsertStringUTF8(Sci::Position bytePos, const gchar *utf8, Sci::Position lengthBytes);
 	void SetTextContents(const gchar *contents);
-	void InsertText(const gchar *contents, int lengthBytes, int *charPosition);
+	void InsertText(const gchar *text, int lengthBytes, int *charPosition);
 	void CopyText(int startChar, int endChar);
 	void CutText(int startChar, int endChar);
 	void DeleteText(int startChar, int endChar);
 	void PasteText(int charPosition);
 
 public:
-	ScintillaGTKAccessible(GtkAccessible *accessible, GtkWidget *widget);
+	ScintillaGTKAccessible(GtkAccessible *accessible_, GtkWidget *widget_);
 	~ScintillaGTKAccessible();
 
 	static ScintillaGTKAccessible *FromAccessible(GtkAccessible *accessible);
diff -r 99e46ea84433 -r 84161436cfbc lexlib/LexerModule.h
--- a/lexlib/LexerModule.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/lexlib/LexerModule.h	Fri Apr 07 17:28:01 2017 +1000
@@ -53,9 +53,9 @@
 
 	ILexer *Create() const;
 
-	virtual void Lex(Sci_PositionU startPos, Sci_Position length, int initStyle,
+	virtual void Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle,
                   WordList *keywordlists[], Accessor &styler) const;
-	virtual void Fold(Sci_PositionU startPos, Sci_Position length, int initStyle,
+	virtual void Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle,
                   WordList *keywordlists[], Accessor &styler) const;
 
 	friend class Catalogue;
diff -r 99e46ea84433 -r 84161436cfbc lexlib/LexerNoExceptions.cxx
--- a/lexlib/LexerNoExceptions.cxx	Fri Apr 07 17:08:55 2017 +1000
+++ b/lexlib/LexerNoExceptions.cxx	Fri Apr 07 17:28:01 2017 +1000
@@ -42,20 +42,20 @@
 	return -1;
 }
 
-void SCI_METHOD LexerNoExceptions::Lex(Sci_PositionU startPos, Sci_Position length, int initStyle, IDocument *pAccess) {
+void SCI_METHOD LexerNoExceptions::Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess) {
 	try {
 		Accessor astyler(pAccess, &props);
-		Lexer(startPos, length, initStyle, pAccess, astyler);
+		Lexer(startPos, lengthDoc, initStyle, pAccess, astyler);
 		astyler.Flush();
 	} catch (...) {
 		// Should not throw into caller as may be compiled with different compiler or options
 		pAccess->SetErrorStatus(SC_STATUS_FAILURE);
 	}
 }
-void SCI_METHOD LexerNoExceptions::Fold(Sci_PositionU startPos, Sci_Position length, int initStyle, IDocument *pAccess) {
+void SCI_METHOD LexerNoExceptions::Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess) {
 	try {
 		Accessor astyler(pAccess, &props);
-		Folder(startPos, length, initStyle, pAccess, astyler);
+		Folder(startPos, lengthDoc, initStyle, pAccess, astyler);
 		astyler.Flush();
 	} catch (...) {
 		// Should not throw into caller as may be compiled with different compiler or options
diff -r 99e46ea84433 -r 84161436cfbc qt/ScintillaEditBase/PlatQt.cpp
--- a/qt/ScintillaEditBase/PlatQt.cpp	Fri Apr 07 17:08:55 2017 +1000
+++ b/qt/ScintillaEditBase/PlatQt.cpp	Fri Apr 07 17:28:01 2017 +1000
@@ -755,7 +755,7 @@
 
 	virtual void SetFont(Font &font);
 	virtual void Create(Window &parent, int ctrlID, Point location,
-						int lineHeight, bool unicodeMode, int technology);
+						int lineHeight, bool unicodeMode_, int technology);
 	virtual void SetAverageCharWidth(int width);
 	virtual void SetVisibleRows(int rows);
 	virtual int GetVisibleRows() const;
diff -r 99e46ea84433 -r 84161436cfbc qt/ScintillaEditBase/PlatQt.h
--- a/qt/ScintillaEditBase/PlatQt.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/qt/ScintillaEditBase/PlatQt.h	Fri Apr 07 17:28:01 2017 +1000
@@ -75,8 +75,8 @@
 	virtual void PenColour(ColourDesired fore);
 	virtual int LogPixelsY();
 	virtual int DeviceHeightFont(int points);
-	virtual void MoveTo(int x, int y);
-	virtual void LineTo(int x, int y);
+	virtual void MoveTo(int x_, int y_);
+	virtual void LineTo(int x_, int y_);
 	virtual void Polygon(Point *pts, int npts, ColourDesired fore,
 		ColourDesired back);
 	virtual void RectangleDraw(PRectangle rc, ColourDesired fore,
@@ -85,7 +85,7 @@
 	virtual void FillRectangle(PRectangle rc, Surface &surfacePattern);
 	virtual void RoundedRectangle(PRectangle rc, ColourDesired fore,
 		ColourDesired back);
-	virtual void AlphaRectangle(PRectangle rc, int corner, ColourDesired fill,
+	virtual void AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill,
 		int alphaFill, ColourDesired outline, int alphaOutline, int flags);
 	virtual void DrawRGBAImage(PRectangle rc, int width, int height,
 		const unsigned char *pixelsImage);
@@ -113,8 +113,8 @@
 	virtual void SetClip(PRectangle rc);
 	virtual void FlushCachedState();
 
-	virtual void SetUnicodeMode(bool unicodeMode);
-	virtual void SetDBCSMode(int codePage);
+	virtual void SetUnicodeMode(bool unicodeMode_);
+	virtual void SetDBCSMode(int codePage_);
 
 	void BrushColour(ColourDesired back);
 	void SetCodec(Font &font);
diff -r 99e46ea84433 -r 84161436cfbc qt/ScintillaEditBase/ScintillaQt.cpp
--- a/qt/ScintillaEditBase/ScintillaQt.cpp	Fri Apr 07 17:08:55 2017 +1000
+++ b/qt/ScintillaEditBase/ScintillaQt.cpp	Fri Apr 07 17:28:01 2017 +1000
@@ -648,10 +648,10 @@
 	        this, SLOT(execCommand(QAction *)));
 }
 
-sptr_t ScintillaQt::WndProc(unsigned int message, uptr_t wParam, sptr_t lParam)
+sptr_t ScintillaQt::WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)
 {
 	try {
-		switch (message) {
+		switch (iMessage) {
 
 		case SCI_SETIMEINTERACTION:
 			// Only inline IME supported on Qt
@@ -674,7 +674,7 @@
 #endif
 
 		default:
-			return ScintillaBase::WndProc(message, wParam, lParam);
+			return ScintillaBase::WndProc(iMessage, wParam, lParam);
 		}
 	} catch (std::bad_alloc &) {
 		errorStatus = SC_STATUS_BADALLOC;
diff -r 99e46ea84433 -r 84161436cfbc src/CallTip.h
--- a/src/CallTip.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/CallTip.h	Fri Apr 07 17:28:01 2017 +1000
@@ -34,7 +34,7 @@
 		int posStart, int posEnd, int ytext, PRectangle rcClient,
 		bool highlight, bool draw);
 	int PaintContents(Surface *surfaceWindow, bool draw);
-	bool IsTabCharacter(char c) const;
+	bool IsTabCharacter(char ch) const;
 	int NextTabPos(int x) const;
 
 public:
diff -r 99e46ea84433 -r 84161436cfbc src/CellBuffer.h
--- a/src/CellBuffer.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/CellBuffer.h	Fri Apr 07 17:28:01 2017 +1000
@@ -90,7 +90,7 @@
 	UndoHistory();
 	~UndoHistory();
 
-	const char *AppendAction(actionType at, Sci::Position position, const char *data, Sci::Position length, bool &startSequence, bool mayCoalesce=true);
+	const char *AppendAction(actionType at, Sci::Position position, const char *data, Sci::Position lengthData, bool &startSequence, bool mayCoalesce=true);
 
 	void BeginUndoAction();
 	void EndUndoAction();
@@ -173,7 +173,7 @@
 	/// Setting styles for positions outside the range of the buffer is safe and has no effect.
 	/// @return true if the style of a character is changed.
 	bool SetStyleAt(Sci::Position position, char styleValue);
-	bool SetStyleFor(Sci::Position position, Sci::Position length, char styleValue);
+	bool SetStyleFor(Sci::Position position, Sci::Position lengthStyle, char styleValue);
 
 	const char *DeleteChars(Sci::Position position, Sci::Position deleteLength, bool &startSequence);
 
diff -r 99e46ea84433 -r 84161436cfbc src/CharClassify.h
--- a/src/CharClassify.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/CharClassify.h	Fri Apr 07 17:28:01 2017 +1000
@@ -19,7 +19,7 @@
 	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };
 	void SetDefaultCharClasses(bool includeWordClass);
 	void SetCharClasses(const unsigned char *chars, cc newCharClass);
-	int GetCharsOfClass(cc charClass, unsigned char *buffer) const;
+	int GetCharsOfClass(cc characterClass, unsigned char *buffer) const;
 	cc GetClass(unsigned char ch) const { return static_cast<cc>(charClass[ch]);}
 	bool IsWord(unsigned char ch) const { return static_cast<cc>(charClass[ch]) == ccWord;}
 
diff -r 99e46ea84433 -r 84161436cfbc src/Document.h
--- a/src/Document.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/Document.h	Fri Apr 07 17:28:01 2017 +1000
@@ -334,7 +334,7 @@
 	int SCI_METHOD GetLineIndentation(Sci_Position line);
 	Sci::Position SetLineIndentation(Sci::Line line, Sci::Position indent);
 	Sci::Position GetLineIndentPosition(Sci::Line line) const;
-	Sci::Position GetColumn(Sci::Position position);
+	Sci::Position GetColumn(Sci::Position pos);
 	Sci::Position CountCharacters(Sci::Position startPos, Sci::Position endPos) const;
 	Sci::Position CountUTF16(Sci::Position startPos, Sci::Position endPos) const;
 	Sci::Position FindColumn(Sci::Line line, Sci::Position column);
@@ -377,7 +377,7 @@
 	void ClearLevels();
 	Sci::Line GetLastChild(Sci::Line lineParent, int level=-1, Sci::Line lastLine=-1);
 	Sci::Line GetFoldParent(Sci::Line line) const;
-	void GetHighlightDelimiters(HighlightDelimiter &hDelimiter, Sci::Line line, Sci::Line lastLine);
+	void GetHighlightDelimiters(HighlightDelimiter &highlightDelimiter, Sci::Line line, Sci::Line lastLine);
 
 	Sci::Position ExtendWordSelect(Sci::Position pos, int delta, bool onlyWordCharacters=false) const;
 	Sci::Position NextWordStart(Sci::Position pos, int delta) const;
diff -r 99e46ea84433 -r 84161436cfbc src/EditView.h
--- a/src/EditView.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/EditView.h	Fri Apr 07 17:28:01 2017 +1000
@@ -128,7 +128,7 @@
 		Sci::Line line, int xStart, PRectangle rcLine, int subLine, XYACCUMULATOR subLineStart, DrawPhase phase);
 	void DrawAnnotation(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll,
 		Sci::Line line, int xStart, PRectangle rcLine, int subLine, DrawPhase phase);
-	void DrawCarets(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line,
+	void DrawCarets(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line lineDoc,
 		int xStart, PRectangle rcLine, int subLine) const;
 	void DrawBackground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine,
 		Range lineRange, Sci::Position posLineStart, int xStart,
diff -r 99e46ea84433 -r 84161436cfbc src/Editor.cxx
--- a/src/Editor.cxx	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/Editor.cxx	Fri Apr 07 17:28:01 2017 +1000
@@ -1627,18 +1627,18 @@
 	}
 }
 
-void Editor::PaintSelMargin(Surface *surfWindow, PRectangle &rc) {
+void Editor::PaintSelMargin(Surface *surfaceWindow, PRectangle &rc) {
 	if (vs.fixedColumnWidth == 0)
 		return;
 
 	AllocateGraphics();
 	RefreshStyleData();
-	RefreshPixMaps(surfWindow);
+	RefreshPixMaps(surfaceWindow);
 
 	// On GTK+ with Ubuntu overlay scroll bars, the surface may have been finished
 	// at this point. The Initialised call checks for this case and sets the status
 	// to be bad which avoids crashes in following calls.
-	if (!surfWindow->Initialised()) {
+	if (!surfaceWindow->Initialised()) {
 		return;
 	}
 
@@ -1655,7 +1655,7 @@
 	if (view.bufferedDraw) {
 		surface = marginView.pixmapSelMargin;
 	} else {
-		surface = surfWindow;
+		surface = surfaceWindow;
 	}
 
 	// Clip vertically to paint area to avoid drawing line numbers
@@ -1667,7 +1667,7 @@
 	marginView.PaintMargin(surface, topLine, rc, rcMargin, *this, vs);
 
 	if (view.bufferedDraw) {
-		surfWindow->Copy(rcMargin, Point(rcMargin.left, rcMargin.top), *marginView.pixmapSelMargin);
+		surfaceWindow->Copy(rcMargin, Point(rcMargin.left, rcMargin.top), *marginView.pixmapSelMargin);
 	}
 }
 
diff -r 99e46ea84433 -r 84161436cfbc src/Editor.h
--- a/src/Editor.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/Editor.h	Fri Apr 07 17:28:01 2017 +1000
@@ -292,7 +292,7 @@
 	SelectionPosition SPositionFromLocation(Point pt, bool canReturnInvalid=false, bool charPosition=false, bool virtualSpace=true);
 	Sci::Position PositionFromLocation(Point pt, bool canReturnInvalid = false, bool charPosition = false);
 	SelectionPosition SPositionFromLineX(Sci::Line lineDoc, int x);
-	Sci::Position PositionFromLineX(Sci::Line line, int x);
+	Sci::Position PositionFromLineX(Sci::Line lineDoc, int x);
 	Sci::Line LineFromLocation(Point pt) const;
 	void SetTopLine(Sci::Line topLineNew);
 
@@ -377,7 +377,7 @@
 	void LinesJoin();
 	void LinesSplit(int pixelWidth);
 
-	void PaintSelMargin(Surface *surface, PRectangle &rc);
+	void PaintSelMargin(Surface *surfaceWindow, PRectangle &rc);
 	void RefreshPixMaps(Surface *surfaceWindow);
 	void Paint(Surface *surfaceWindow, PRectangle rcArea);
 	long FormatRange(bool draw, Sci_RangeToFormat *pfr);
@@ -449,7 +449,7 @@
 	void CheckModificationForWrap(DocModification mh);
 	void NotifyModified(Document *document, DocModification mh, void *userData);
 	void NotifyDeleted(Document *document, void *userData);
-	void NotifyStyleNeeded(Document *doc, void *userData, Sci::Position endPos);
+	void NotifyStyleNeeded(Document *doc, void *userData, Sci::Position endStyleNeeded);
 	void NotifyLexerChanged(Document *doc, void *userData);
 	void NotifyErrorOccurred(Document *doc, void *userData, int status);
 	void NotifyMacroRecord(unsigned int iMessage, uptr_t wParam, sptr_t lParam);
diff -r 99e46ea84433 -r 84161436cfbc src/LineMarker.h
--- a/src/LineMarker.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/LineMarker.h	Fri Apr 07 17:28:01 2017 +1000
@@ -76,7 +76,7 @@
 	void SetXPM(const char *textForm);
 	void SetXPM(const char *const *linesForm);
 	void SetRGBAImage(Point sizeRGBAImage, float scale, const unsigned char *pixelsRGBAImage);
-	void Draw(Surface *surface, PRectangle &rc, Font &fontForCharacter, typeOfFold tFold, int marginStyle) const;
+	void Draw(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, typeOfFold tFold, int marginStyle) const;
 };
 
 #ifdef SCI_NAMESPACE
diff -r 99e46ea84433 -r 84161436cfbc src/PerLine.h
--- a/src/PerLine.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/PerLine.h	Fri Apr 07 17:28:01 2017 +1000
@@ -54,7 +54,7 @@
 
 	int MarkValue(Sci::Line line);
 	Sci::Line MarkerNext(Sci::Line lineStart, int mask) const;
-	int AddMark(Sci::Line line, int marker, Sci::Line lines);
+	int AddMark(Sci::Line line, int markerNum, Sci::Line lines);
 	void MergeMarkers(Sci::Line line);
 	bool DeleteMark(Sci::Line line, int markerNum, bool all);
 	void DeleteMarkFromHandle(int markerHandle);
diff -r 99e46ea84433 -r 84161436cfbc src/PositionCache.h
--- a/src/PositionCache.h	Fri Apr 07 17:08:55 2017 +1000
+++ b/src/PositionCache.h	Fri Apr 07 17:28:01 2017 +1000
@@ -83,7 +83,7 @@
 	void Invalidate(validLevel validity_);
 	int LineStart(int line) const;
 	int LineLastVisible(int line) const;
-	Range SubLineRange(int line) const;
+	Range SubLineRange(int subLine) const;
 	bool InLine(int offset, int line) const;
 	void SetLineStart(int line, int start);
 	void SetBracesHighlight(Range rangeLine, const Sci::Position braces[],
@@ -134,7 +134,7 @@
 	void Set(unsigned int styleNumber_, const char *s_, unsigned int len_, XYPOSITION *positions_, unsigned int clock_);
 	void Clear();
 	bool Retrieve(unsigned int styleNumber_, const char *s_, unsigned int len_, XYPOSITION *positions_) const;
-	static unsigned int Hash(unsigned int styleNumber_, const char *s, unsigned int len);
+	static unsigned int Hash(unsigned int styleNumber_, const char *s, unsigned int len_);
 	bool NewerThan(const PositionCacheEntry &other) const;
 	void ResetClock();
 };
@@ -194,7 +194,7 @@
 	enum { lengthStartSubdivision = 300 };
 	// Try to make each subdivided run lengthEachSubdivision or shorter.
 	enum { lengthEachSubdivision = 100 };
-	BreakFinder(const LineLayout *ll_, const Selection *psel, Range rangeLine_, Sci::Position posLineStart_,
+	BreakFinder(const LineLayout *ll_, const Selection *psel, Range lineRange_, Sci::Position posLineStart_,
 		int xStart, bool breakForSelection, const Document *pdoc_, const SpecialRepresentations *preprs_, const ViewStyle *pvsDraw);
 	~BreakFinder();
 	TextSegment Next();
diff -r 99e46ea84433 -r 84161436cfbc win32/PlatWin.cxx
--- a/win32/PlatWin.cxx	Fri Apr 07 17:08:55 2017 +1000
+++ b/win32/PlatWin.cxx	Fri Apr 07 17:28:01 2017 +1000
@@ -1811,11 +1811,11 @@
 	return rc;
 }
 
-void Window::SetPositionRelative(PRectangle rc, Window w) {
+void Window::SetPositionRelative(PRectangle rc, Window relativeTo) {
 	const LONG style = ::GetWindowLong(static_cast<HWND>(wid), GWL_STYLE);
 	if (style & WS_POPUP) {
 		POINT ptOther = {0, 0};
-		::ClientToScreen(static_cast<HWND>(w.GetID()), &ptOther);
+		::ClientToScreen(static_cast<HWND>(relativeTo.GetID()), &ptOther);
 		rc.Move(static_cast<XYPOSITION>(ptOther.x), static_cast<XYPOSITION>(ptOther.y));
 
 		RECT rcMonitor = RectFromPRectangle(rc);
@@ -2657,9 +2657,9 @@
 	::DeleteObject(hBitmap);
 }
 
-LRESULT PASCAL ListBoxX::ControlWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
+LRESULT PASCAL ListBoxX::ControlWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam) {
 	try {
-		switch (uMsg) {
+		switch (iMessage) {
 		case WM_ERASEBKGND:
 			return TRUE;
 
@@ -2706,13 +2706,13 @@
 
 		WNDPROC prevWndProc = reinterpret_cast<WNDPROC>(GetWindowLongPtr(hWnd, GWLP_USERDATA));
 		if (prevWndProc) {
-			return ::CallWindowProc(prevWndProc, hWnd, uMsg, wParam, lParam);
+			return ::CallWindowProc(prevWndProc, hWnd, iMessage, wParam, lParam);
 		} else {
-			return ::DefWindowProc(hWnd, uMsg, wParam, lParam);
+			return ::DefWindowProc(hWnd, iMessage, wParam, lParam);
 		}
 	} catch (...) {
 	}
-	return ::DefWindowProc(hWnd, uMsg, wParam, lParam);
+	return ::DefWindowProc(hWnd, iMessage, wParam, lParam);
 }
 
 LRESULT ListBoxX::WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam) {
diff -r 99e46ea84433 -r 84161436cfbc win32/ScintillaWin.cxx
--- a/win32/ScintillaWin.cxx	Fri Apr 07 17:08:55 2017 +1000
+++ b/win32/ScintillaWin.cxx	Fri Apr 07 17:28:01 2017 +1000
@@ -356,8 +356,8 @@
 	void ScrollMessage(WPARAM wParam);
 	void HorizontalScrollMessage(WPARAM wParam);
 	void FullPaint();
-	void FullPaintDC(HDC dc);
-	bool IsCompatibleDC(HDC dc);
+	void FullPaintDC(HDC hdc);
+	bool IsCompatibleDC(HDC hOtherDC);
 	DWORD EffectFromState(DWORD grfKeyState) const;
 
 	int SetScrollInfo(int nBar, LPCSCROLLINFO lpsi, BOOL bRedraw);
