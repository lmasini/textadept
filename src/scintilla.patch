Only link the LPeg lexer.
--- a/src/Catalogue.cxx	Fri Dec 06 16:19:52 2013 +1100
+++ b/src/Catalogue.cxx	Sun Dec 15 21:21:20 2013 -0500
@@ -74,6 +74,7 @@
 // Shorten the code that declares a lexer and ensures it is linked in by calling a method.
 #define LINK_LEXER(lexer) extern LexerModule lexer; Catalogue::AddLexerModule(&lexer);
 
+#if 0
 //++Autogenerated -- run scripts/LexGen.py to regenerate
 //**\(\tLINK_LEXER(\*);\n\)
 	LINK_LEXER(lmA68k);
@@ -187,6 +188,8 @@
 	LINK_LEXER(lmYAML);
 
 //--Autogenerated -- end of automatically generated section
+#endif
+	LINK_LEXER(lmLPeg);
 
 	return 1;
 }
Revert caret block placement change introduced by Scintilla 3.7.3.
--- a/src/EditView.cxx	2017-10-06 14:21:52.634733696 +0200
+++ b/src/EditView.cxx	2017-10-06 15:06:12.449296662 +0200
@@ -1328,13 +1328,7 @@
 	// For each selection draw
 	for (size_t r = 0; (r<model.sel.Count()) || drawDrag; r++) {
 		const bool mainCaret = r == model.sel.Main();
-		SelectionPosition posCaret = (drawDrag ? model.posDrag : model.sel.Range(r).caret);
-		if ((vsDraw.IsBlockCaretStyle() || imeCaretBlockOverride) && !drawDrag && posCaret > model.sel.Range(r).anchor) {
-			if (posCaret.VirtualSpace() > 0)
-				posCaret.SetVirtualSpace(posCaret.VirtualSpace() - 1);
-			else
-				posCaret.SetPosition(model.pdoc->MovePositionOutsideChar(posCaret.Position()-1, -1));
-		}
+		const SelectionPosition posCaret = (drawDrag ? model.posDrag : model.sel.Range(r).caret);
 		const int offset = static_cast<int>(posCaret.Position() - posLineStart);
 		const XYPOSITION spaceWidth = vsDraw.styles[ll->EndLineStyle()].spaceWidth;
 		const XYPOSITION virtualOffset = posCaret.VirtualSpace() * spaceWidth;
Hijack SCI_LOADLEXERLIBRARY for programmatically setting input method.
This is helpful on newer version of Mac OSX, where changing the input method is
flaky.
diff -r 6e368ee248e4 gtk/ScintillaGTK.cxx
--- a/gtk/ScintillaGTK.cxx	Fri Oct 26 11:06:34 2018 -0400
+++ b/gtk/ScintillaGTK.cxx	Sun Nov 25 00:20:58 2018 -0500
@@ -821,11 +821,11 @@
 		case SCI_GETDIRECTPOINTER:
 			return reinterpret_cast<sptr_t>(this);
 
-#ifdef SCI_LEXER
 		case SCI_LOADLEXERLIBRARY:
-			LexerManager::GetInstance()->Load(ConstCharPtrFromSPtr(lParam));
+			// Hijack this interface to programmatically set input method.
+			gtk_im_multicontext_set_context_id(GTK_IM_MULTICONTEXT(im_context), ConstCharPtrFromSPtr(lParam));
 			break;
-#endif
+
 		case SCI_TARGETASUTF8:
 			return TargetAsUTF8(CharPtrFromSPtr(lParam));
 
