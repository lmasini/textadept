Only link the LPeg lexer.
--- a/src/Catalogue.cxx	Fri Dec 06 16:19:52 2013 +1100
+++ b/src/Catalogue.cxx	Sun Dec 15 21:21:20 2013 -0500
@@ -74,6 +74,7 @@
 // Shorten the code that declares a lexer and ensures it is linked in by calling a method.
 #define LINK_LEXER(lexer) extern LexerModule lexer; Catalogue::AddLexerModule(&lexer);
 
+#if 0
 //++Autogenerated -- run scripts/LexGen.py to regenerate
 //**\(\tLINK_LEXER(\*);\n\)
 	LINK_LEXER(lmA68k);
@@ -187,6 +188,8 @@
 	LINK_LEXER(lmYAML);
 
 //--Autogenerated -- end of automatically generated section
+#endif
+	LINK_LEXER(lmLPeg);
 
 	return 1;
 }
Revert caret block placement change introduced by Scintilla 3.7.3.
--- a/src/EditView.cxx	2017-10-06 14:21:52.634733696 +0200
+++ b/src/EditView.cxx	2017-10-06 15:06:12.449296662 +0200
@@ -1328,13 +1328,7 @@
 	// For each selection draw
 	for (size_t r = 0; (r<model.sel.Count()) || drawDrag; r++) {
 		const bool mainCaret = r == model.sel.Main();
-		SelectionPosition posCaret = (drawDrag ? model.posDrag : model.sel.Range(r).caret);
-		if (vsDraw.caretStyle == CARETSTYLE_BLOCK && !drawDrag && posCaret > model.sel.Range(r).anchor) {
-			if (posCaret.VirtualSpace() > 0)
-				posCaret.SetVirtualSpace(posCaret.VirtualSpace() - 1);
-			else
-				posCaret.SetPosition(model.pdoc->MovePositionOutsideChar(posCaret.Position()-1, -1));
-		}
+		const SelectionPosition posCaret = (drawDrag ? model.posDrag : model.sel.Range(r).caret);
 		const int offset = static_cast<int>(posCaret.Position() - posLineStart);
 		const XYPOSITION spaceWidth = vsDraw.styles[ll->EndLineStyle()].spaceWidth;
 		const XYPOSITION virtualOffset = posCaret.VirtualSpace() * spaceWidth;
diff -r f9eb9df49b8e src/Document.cxx
--- a/src/Document.cxx	Sun May 06 23:46:01 2018 -0400
+++ b/src/Document.cxx	Fri May 11 11:51:01 2018 -0400
@@ -2951,7 +2951,7 @@
 #endif
 			ws[outLen] = 0;
 			std::wregex regexp;
-#if defined(__APPLE__)
+#if defined(__APPLE__) && !defined(GTK)
 			// Using a UTF-8 locale doesn't change to Unicode over a byte buffer so '.'
 			// is one byte not one character.
 			// However, on OS X this makes wregex act as Unicode
