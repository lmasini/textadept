B	_HOME/modules/lua/lua.luadoc	/^function lpeg.B(patt) end$/;"	f	class:lpeg
C	_HOME/modules/lua/lua.luadoc	/^function lpeg.C(patt) end$/;"	f	class:lpeg
Carg	_HOME/modules/lua/lua.luadoc	/^function lpeg.Carg(n) end$/;"	f	class:lpeg
Cb	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cb(name) end$/;"	f	class:lpeg
Cc	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cc([value, ...]) end$/;"	f	class:lpeg
Cf	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cf(patt, func) end$/;"	f	class:lpeg
Cg	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cg(patt [, name]) end$/;"	f	class:lpeg
Cmt	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cmt(patt, function) end$/;"	f	class:lpeg
Cp	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cp() end$/;"	f	class:lpeg
Cs	_HOME/modules/lua/lua.luadoc	/^function lpeg.Cs(patt) end$/;"	f	class:lpeg
Ct	_HOME/modules/lua/lua.luadoc	/^function lpeg.Ct(patt) end$/;"	f	class:lpeg
P	_HOME/modules/lua/lua.luadoc	/^function lpeg.P(value) end$/;"	f	class:lpeg
R	_HOME/modules/lua/lua.luadoc	/^function lpeg.R({range}) end$/;"	f	class:lpeg
S	_HOME/modules/lua/lua.luadoc	/^function lpeg.S(string) end$/;"	f	class:lpeg
V	_HOME/modules/lua/lua.luadoc	/^function lpeg.V(v) end$/;"	f	class:lpeg
_G	_HOME/modules/lua/lua.luadoc	/^function assert(v [, message]) end$/;"	F	
_G	_HOME/modules/lua/lua.luadoc	/^function assert(v [, message]) end$/;"	m	
_VERSION	_HOME/modules/lua/lua.luadoc	/^function assert(v [, message]) end$/;"	F	
abs	_HOME/modules/lua/lua.luadoc	/^function math.abs(x) end$/;"	f	class:math
acos	_HOME/modules/lua/lua.luadoc	/^function math.acos(x) end$/;"	f	class:math
arshift	_HOME/modules/lua/lua.luadoc	/^function bit32.arshift(x, disp) end$/;"	f	class:bit32
asin	_HOME/modules/lua/lua.luadoc	/^function math.asin(x) end$/;"	f	class:math
assert	_HOME/modules/lua/lua.luadoc	/^function assert(v [, message]) end$/;"	f	
atan	_HOME/modules/lua/lua.luadoc	/^function math.atan(y [, x]) end$/;"	f	class:math
atan2	_HOME/modules/lua/lua.luadoc	/^function math.atan2(y, x) end$/;"	f	class:math
attributes	_HOME/modules/lua/lua.luadoc	/^function lfs.attributes(filepath [, aname | atable]) end$/;"	f	class:lfs
band	_HOME/modules/lua/lua.luadoc	/^function bit32.band(...) end$/;"	f	class:bit32
bit32	_HOME/modules/lua/lua.luadoc	/^function bit32.arshift(x, disp) end$/;"	m	
bnot	_HOME/modules/lua/lua.luadoc	/^function bit32.bnot(x) end$/;"	f	class:bit32
bor	_HOME/modules/lua/lua.luadoc	/^function bit32.bor(...) end$/;"	f	class:bit32
btest	_HOME/modules/lua/lua.luadoc	/^function bit32.btest(...) end$/;"	f	class:bit32
byte	_HOME/modules/lua/lua.luadoc	/^function string.byte(s [, i [, j]]) end$/;"	f	class:string
ceil	_HOME/modules/lua/lua.luadoc	/^function math.ceil(x) end$/;"	f	class:math
char	_HOME/modules/lua/lua.luadoc	/^function string.char(···) end$/;"	f	class:string
char	_HOME/modules/lua/lua.luadoc	/^function utf8.char(···) end$/;"	f	class:utf8
charpattern	_HOME/modules/lua/lua.luadoc	/^function utf8.char(···) end$/;"	F	class:utf8
chdir	_HOME/modules/lua/lua.luadoc	/^function lfs.chdir(path) end$/;"	f	class:lfs
clock	_HOME/modules/lua/lua.luadoc	/^function os.clock() end$/;"	f	class:os
close	_HOME/modules/lua/lua.luadoc	/^function file:close() end$/;"	f	class:file
close	_HOME/modules/lua/lua.luadoc	/^function io.close([file]) end$/;"	f	class:io
codepoint	_HOME/modules/lua/lua.luadoc	/^function utf8.codepoint(s [, i [, j]]) end$/;"	f	class:utf8
codes	_HOME/modules/lua/lua.luadoc	/^function utf8.codes(s) end$/;"	f	class:utf8
collectgarbage	_HOME/modules/lua/lua.luadoc	/^function collectgarbage([opt [, arg]]) end$/;"	f	
concat	_HOME/modules/lua/lua.luadoc	/^function table.concat(list [, sep [, i [, j]]]) end$/;"	f	class:table
config	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
coroutine	_HOME/modules/lua/lua.luadoc	/^function coroutine.create(f) end$/;"	m	
cos	_HOME/modules/lua/lua.luadoc	/^function math.cos(x) end$/;"	f	class:math
cosh	_HOME/modules/lua/lua.luadoc	/^function math.cosh(x) end$/;"	f	class:math
cpath	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
create	_HOME/modules/lua/lua.luadoc	/^function coroutine.create(f) end$/;"	f	class:coroutine
currentdir	_HOME/modules/lua/lua.luadoc	/^function lfs.currentdir() end$/;"	f	class:lfs
date	_HOME/modules/lua/lua.luadoc	/^function os.date([format [, time]]) end$/;"	f	class:os
debug	_HOME/modules/lua/lua.luadoc	/^function debug.debug() end$/;"	f	class:debug
debug	_HOME/modules/lua/lua.luadoc	/^function debug.debug() end$/;"	m	
deg	_HOME/modules/lua/lua.luadoc	/^function math.deg(x) end$/;"	f	class:math
difftime	_HOME/modules/lua/lua.luadoc	/^function os.difftime(t2, t1) end$/;"	f	class:os
dir	_HOME/modules/lua/lua.luadoc	/^function lfs.dir(path) end$/;"	f	class:lfs
dofile	_HOME/modules/lua/lua.luadoc	/^function dofile([filename]) end$/;"	f	
dump	_HOME/modules/lua/lua.luadoc	/^function string.dump(function [, strip]) end$/;"	f	class:string
error	_HOME/modules/lua/lua.luadoc	/^function error(message [, level]) end$/;"	f	
execute	_HOME/modules/lua/lua.luadoc	/^function os.execute([command]) end$/;"	f	class:os
exit	_HOME/modules/lua/lua.luadoc	/^function os.exit([code [, close]]) end$/;"	f	class:os
exp	_HOME/modules/lua/lua.luadoc	/^function math.exp(x) end$/;"	f	class:math
extract	_HOME/modules/lua/lua.luadoc	/^function bit32.extract(n, field [, width]) end$/;"	f	class:bit32
find	_HOME/modules/lua/lua.luadoc	/^function string.find(s, pattern [, init [, plain]]) end$/;"	f	class:string
floor	_HOME/modules/lua/lua.luadoc	/^function math.floor(x) end$/;"	f	class:math
flush	_HOME/modules/lua/lua.luadoc	/^function file:flush() end$/;"	f	class:file
flush	_HOME/modules/lua/lua.luadoc	/^function io.flush() end$/;"	f	class:io
fmod	_HOME/modules/lua/lua.luadoc	/^function math.fmod(x, y) end$/;"	f	class:math
format	_HOME/modules/lua/lua.luadoc	/^function string.format(formatstring, ···) end$/;"	f	class:string
frexp	_HOME/modules/lua/lua.luadoc	/^function math.frexp(x) end$/;"	f	class:math
getenv	_HOME/modules/lua/lua.luadoc	/^function os.getenv(varname) end$/;"	f	class:os
getfenv	_HOME/modules/lua/lua.luadoc	/^function debug.getfenv(o) end$/;"	f	class:debug
getfenv	_HOME/modules/lua/lua.luadoc	/^function getfenv([f]) end$/;"	f	
gethook	_HOME/modules/lua/lua.luadoc	/^function debug.gethook([thread]) end$/;"	f	class:debug
getinfo	_HOME/modules/lua/lua.luadoc	/^function debug.getinfo([thread,] f [, what]) end$/;"	f	class:debug
getlocal	_HOME/modules/lua/lua.luadoc	/^function debug.getlocal([thread,] f, local) end$/;"	f	class:debug
getmetatable	_HOME/modules/lua/lua.luadoc	/^function debug.getmetatable(value) end$/;"	f	class:debug
getmetatable	_HOME/modules/lua/lua.luadoc	/^function getmetatable(object) end$/;"	f	
getregistry	_HOME/modules/lua/lua.luadoc	/^function debug.getregistry() end$/;"	f	class:debug
getupvalue	_HOME/modules/lua/lua.luadoc	/^function debug.getupvalue(f, up) end$/;"	f	class:debug
getuservalue	_HOME/modules/lua/lua.luadoc	/^function debug.getuservalue(u) end$/;"	f	class:debug
gmatch	_HOME/modules/lua/lua.luadoc	/^function string.gmatch(s, pattern) end$/;"	f	class:string
gsub	_HOME/modules/lua/lua.luadoc	/^function string.gsub(s, pattern, repl [, n]) end$/;"	f	class:string
huge	_HOME/modules/lua/lua.luadoc	/^function math.abs(x) end$/;"	F	class:math
input	_HOME/modules/lua/lua.luadoc	/^function io.input([file]) end$/;"	f	class:io
insert	_HOME/modules/lua/lua.luadoc	/^function table.insert(list, [pos,] value) end$/;"	f	class:table
io	_HOME/modules/lua/lua.luadoc	/^function io.close([file]) end$/;"	m	
ipairs	_HOME/modules/lua/lua.luadoc	/^function ipairs(t) end$/;"	f	
isyieldable	_HOME/modules/lua/lua.luadoc	/^function coroutine.isyieldable() end$/;"	f	class:coroutine
ldexp	_HOME/modules/lua/lua.luadoc	/^function math.ldexp(m, e) end$/;"	f	class:math
len	_HOME/modules/lua/lua.luadoc	/^function string.len(s) end$/;"	f	class:string
len	_HOME/modules/lua/lua.luadoc	/^function utf8.len(s [, i [, j]]) end$/;"	f	class:utf8
lfs	_HOME/modules/lua/lua.luadoc	/^function lfs.attributes(filepath [, aname | atable]) end$/;"	m	
lines	_HOME/modules/lua/lua.luadoc	/^function file:lines(···) end$/;"	f	class:file
lines	_HOME/modules/lua/lua.luadoc	/^function io.lines([filename, ···]) end$/;"	f	class:io
link	_HOME/modules/lua/lua.luadoc	/^function lfs.link(old, new[, symlink]) end$/;"	f	class:lfs
load	_HOME/modules/lua/lua.luadoc	/^function load(chunk [, chunkname [, mode [, env]]]) end$/;"	f	
loaded	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
loaders	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
loadfile	_HOME/modules/lua/lua.luadoc	/^function loadfile([filename [, mode [, env]]]) end$/;"	f	
loadlib	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	f	class:package
loadstring	_HOME/modules/lua/lua.luadoc	/^function loadstring(string [, chunkname])$/;"	f	
locale	_HOME/modules/lua/lua.luadoc	/^function lpeg.locale([table]) end$/;"	f	class:lpeg
lock	_HOME/modules/lua/lua.luadoc	/^function lfs.lock(filehandle, mode[, start[, length]]) end$/;"	f	class:lfs
lock_dir	_HOME/modules/lua/lua.luadoc	/^function lfs.lock_dir(path, [seconds_stale]) end$/;"	f	class:lfs
log	_HOME/modules/lua/lua.luadoc	/^function math.log(x [, base]) end$/;"	f	class:math
log10	_HOME/modules/lua/lua.luadoc	/^function math.log10(x) end$/;"	f	class:math
lower	_HOME/modules/lua/lua.luadoc	/^function string.lower(s) end$/;"	f	class:string
lpeg	_HOME/modules/lua/lua.luadoc	/^function lpeg.B(patt) end$/;"	m	
lrotate	_HOME/modules/lua/lua.luadoc	/^function bit32.lrotate(x, disp) end$/;"	f	class:bit32
lshift	_HOME/modules/lua/lua.luadoc	/^function bit32.lshift(x, disp) end$/;"	f	class:bit32
match	_HOME/modules/lua/lua.luadoc	/^function lpeg.match(pattern, subject [, init]) end$/;"	f	class:lpeg
match	_HOME/modules/lua/lua.luadoc	/^function string.match(s, pattern [, init]) end$/;"	f	class:string
math	_HOME/modules/lua/lua.luadoc	/^function math.abs(x) end$/;"	m	
max	_HOME/modules/lua/lua.luadoc	/^function math.max(x, ···) end$/;"	f	class:math
maxinteger	_HOME/modules/lua/lua.luadoc	/^function math.abs(x) end$/;"	F	class:math
maxn	_HOME/modules/lua/lua.luadoc	/^function table.maxn(table) end$/;"	f	class:table
min	_HOME/modules/lua/lua.luadoc	/^function math.min(x, ···) end$/;"	f	class:math
mininteger	_HOME/modules/lua/lua.luadoc	/^function math.abs(x) end$/;"	F	class:math
mkdir	_HOME/modules/lua/lua.luadoc	/^function lfs.mkdir(dirname) end$/;"	f	class:lfs
modf	_HOME/modules/lua/lua.luadoc	/^function math.modf(x) end$/;"	f	class:math
module	_HOME/modules/lua/lua.luadoc	/^function module(name [, ···]) end$/;"	f	
move	_HOME/modules/lua/lua.luadoc	/^function table.move(a1, f, e, t [,a2]) end$/;"	f	class:table
next	_HOME/modules/lua/lua.luadoc	/^function next(table [, index]) end$/;"	f	
offset	_HOME/modules/lua/lua.luadoc	/^function utf8.offset(s, n [, i]) end$/;"	f	class:utf8
open	_HOME/modules/lua/lua.luadoc	/^function io.open(filename [, mode]) end$/;"	f	class:io
os	_HOME/modules/lua/lua.luadoc	/^function os.clock() end$/;"	m	
output	_HOME/modules/lua/lua.luadoc	/^function io.output([file]) end$/;"	f	class:io
pack	_HOME/modules/lua/lua.luadoc	/^function string.pack(fmt, v1, v2, ···) end$/;"	f	class:string
pack	_HOME/modules/lua/lua.luadoc	/^function table.pack(···) end$/;"	f	class:table
package	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	m	
packsize	_HOME/modules/lua/lua.luadoc	/^function string.packsize(fmt) end$/;"	f	class:string
pairs	_HOME/modules/lua/lua.luadoc	/^function pairs(t) end$/;"	f	
path	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
pcall	_HOME/modules/lua/lua.luadoc	/^function pcall(f [, arg1, ···]) end$/;"	f	
pi	_HOME/modules/lua/lua.luadoc	/^function math.abs(x) end$/;"	F	class:math
popen	_HOME/modules/lua/lua.luadoc	/^function io.popen(prog [, mode]) end$/;"	f	class:io
pow	_HOME/modules/lua/lua.luadoc	/^function math.pow(x, y) end$/;"	f	class:math
preload	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
print	_HOME/modules/lua/lua.luadoc	/^function print(···) end$/;"	f	
rad	_HOME/modules/lua/lua.luadoc	/^function math.rad(x) end$/;"	f	class:math
random	_HOME/modules/lua/lua.luadoc	/^function math.random([m [, n]]) end$/;"	f	class:math
randomseed	_HOME/modules/lua/lua.luadoc	/^function math.randomseed(x) end$/;"	f	class:math
rawequal	_HOME/modules/lua/lua.luadoc	/^function rawequal(v1, v2) end$/;"	f	
rawget	_HOME/modules/lua/lua.luadoc	/^function rawget(table, index) end$/;"	f	
rawlen	_HOME/modules/lua/lua.luadoc	/^function rawlen(v) end$/;"	f	
rawset	_HOME/modules/lua/lua.luadoc	/^function rawset(table, index, value) end$/;"	f	
read	_HOME/modules/lua/lua.luadoc	/^function file:read(···) end$/;"	f	class:file
read	_HOME/modules/lua/lua.luadoc	/^function io.read(···) end$/;"	f	class:io
remove	_HOME/modules/lua/lua.luadoc	/^function os.remove(filename) end$/;"	f	class:os
remove	_HOME/modules/lua/lua.luadoc	/^function table.remove(list [, pos]) end$/;"	f	class:table
rename	_HOME/modules/lua/lua.luadoc	/^function os.rename(oldname, newname) end$/;"	f	class:os
rep	_HOME/modules/lua/lua.luadoc	/^function string.rep(s, n [, sep]) end$/;"	f	class:string
replace	_HOME/modules/lua/lua.luadoc	/^function bit32.replace(n, v, field [, width]) end$/;"	f	class:bit32
require	_HOME/modules/lua/lua.luadoc	/^function require(modname) end$/;"	f	
resume	_HOME/modules/lua/lua.luadoc	/^function coroutine.resume(co [, val1, ···]) end$/;"	f	class:coroutine
reverse	_HOME/modules/lua/lua.luadoc	/^function string.reverse(s) end$/;"	f	class:string
rmdir	_HOME/modules/lua/lua.luadoc	/^function lfs.rmdir(dirname) end$/;"	f	class:lfs
rrotate	_HOME/modules/lua/lua.luadoc	/^function bit32.rrotate(x, disp) end$/;"	f	class:bit32
rshift	_HOME/modules/lua/lua.luadoc	/^function bit32.rshift(x, disp) end$/;"	f	class:bit32
running	_HOME/modules/lua/lua.luadoc	/^function coroutine.running() end$/;"	f	class:coroutine
searchers	_HOME/modules/lua/lua.luadoc	/^function package.loadlib(libname, funcname) end$/;"	F	class:package
searchpath	_HOME/modules/lua/lua.luadoc	/^function package.searchpath(name, path [, sep [, rep]]) end$/;"	f	class:package
seeall	_HOME/modules/lua/lua.luadoc	/^function package.seeall(module) end$/;"	f	class:package
seek	_HOME/modules/lua/lua.luadoc	/^function file:seek([whence [, offset]]) end$/;"	f	class:file
select	_HOME/modules/lua/lua.luadoc	/^function select(index, ···) end$/;"	f	
setfenv	_HOME/modules/lua/lua.luadoc	/^function debug.setfenv(object, table) end$/;"	f	class:debug
setfenv	_HOME/modules/lua/lua.luadoc	/^function setfenv(f, table) end$/;"	f	
sethook	_HOME/modules/lua/lua.luadoc	/^function debug.sethook([thread,] hook, mask [, count]) end$/;"	f	class:debug
setlocal	_HOME/modules/lua/lua.luadoc	/^function debug.setlocal([thread,] level, local, value) end$/;"	f	class:debug
setlocale	_HOME/modules/lua/lua.luadoc	/^function os.setlocale(locale [, category]) end$/;"	f	class:os
setmaxstack	_HOME/modules/lua/lua.luadoc	/^function lpeg.setmaxstack(max) end$/;"	f	class:lpeg
setmetatable	_HOME/modules/lua/lua.luadoc	/^function debug.setmetatable(value, table) end$/;"	f	class:debug
setmetatable	_HOME/modules/lua/lua.luadoc	/^function setmetatable(table, metatable) end$/;"	f	
setmode	_HOME/modules/lua/lua.luadoc	/^function lfs.setmode(file, mode) end$/;"	f	class:lfs
setupvalue	_HOME/modules/lua/lua.luadoc	/^function debug.setupvalue(f, up, value) end$/;"	f	class:debug
setuservalue	_HOME/modules/lua/lua.luadoc	/^function debug.setuservalue(udata, value) end$/;"	f	class:debug
setvbuf	_HOME/modules/lua/lua.luadoc	/^function file:setvbuf(mode [, size]) end$/;"	f	class:file
sin	_HOME/modules/lua/lua.luadoc	/^function math.sin(x) end$/;"	f	class:math
sinh	_HOME/modules/lua/lua.luadoc	/^function math.sinh(x) end$/;"	f	class:math
sort	_HOME/modules/lua/lua.luadoc	/^function table.sort(list [, comp]) end$/;"	f	class:table
sqrt	_HOME/modules/lua/lua.luadoc	/^function math.sqrt(x) end$/;"	f	class:math
status	_HOME/modules/lua/lua.luadoc	/^function coroutine.status(co) end$/;"	f	class:coroutine
stderr	_HOME/modules/lua/lua.luadoc	/^function io.close([file]) end$/;"	F	class:io
stdin	_HOME/modules/lua/lua.luadoc	/^function io.close([file]) end$/;"	F	class:io
stdout	_HOME/modules/lua/lua.luadoc	/^function io.close([file]) end$/;"	F	class:io
string	_HOME/modules/lua/lua.luadoc	/^function string.byte(s [, i [, j]]) end$/;"	m	
sub	_HOME/modules/lua/lua.luadoc	/^function string.sub(s, i [, j]) end$/;"	f	class:string
symlinkattributes	_HOME/modules/lua/lua.luadoc	/^function lfs.symlinkattributes(filepath [, aname]) end$/;"	f	class:lfs
table	_HOME/modules/lua/lua.luadoc	/^function table.concat(list [, sep [, i [, j]]]) end$/;"	m	
tan	_HOME/modules/lua/lua.luadoc	/^function math.tan(x) end$/;"	f	class:math
tanh	_HOME/modules/lua/lua.luadoc	/^function math.tanh(x) end$/;"	f	class:math
time	_HOME/modules/lua/lua.luadoc	/^function os.time([table]) end$/;"	f	class:os
tmpfile	_HOME/modules/lua/lua.luadoc	/^function io.tmpfile() end$/;"	f	class:io
tmpname	_HOME/modules/lua/lua.luadoc	/^function os.tmpname() end$/;"	f	class:os
tointeger	_HOME/modules/lua/lua.luadoc	/^function math.tointeger(x) end$/;"	f	class:math
tonumber	_HOME/modules/lua/lua.luadoc	/^function tonumber(e [, base]) end$/;"	f	
tostring	_HOME/modules/lua/lua.luadoc	/^function tostring(v) end$/;"	f	
touch	_HOME/modules/lua/lua.luadoc	/^function lfs.touch(filepath [, atime [, mtime]]) end$/;"	f	class:lfs
traceback	_HOME/modules/lua/lua.luadoc	/^function debug.traceback([thread,] [message] [,level]) end$/;"	f	class:debug
type	_HOME/modules/lua/lua.luadoc	/^function io.type(obj) end$/;"	f	class:io
type	_HOME/modules/lua/lua.luadoc	/^function lpeg.type(value) end$/;"	f	class:lpeg
type	_HOME/modules/lua/lua.luadoc	/^function math.type(x) end$/;"	f	class:math
type	_HOME/modules/lua/lua.luadoc	/^function type(v) end$/;"	f	
ult	_HOME/modules/lua/lua.luadoc	/^function math.ult(m, n) end$/;"	f	class:math
unlock	_HOME/modules/lua/lua.luadoc	/^function lfs.unlock(filehandle[, start[, length]]) end$/;"	f	class:lfs
unpack	_HOME/modules/lua/lua.luadoc	/^function string.unpack(fmt, s [, pos]) end$/;"	f	class:string
unpack	_HOME/modules/lua/lua.luadoc	/^function table.unpack(list [, i [, j]]) end$/;"	f	class:table
unpack	_HOME/modules/lua/lua.luadoc	/^function unpack(list [, i [, j]]) end$/;"	f	
upper	_HOME/modules/lua/lua.luadoc	/^function string.upper(s) end$/;"	f	class:string
upvalueid	_HOME/modules/lua/lua.luadoc	/^function debug.upvalueid(f, n) end$/;"	f	class:debug
upvaluejoin	_HOME/modules/lua/lua.luadoc	/^function debug.upvaluejoin(f1, n1, f2, n2) end$/;"	f	class:debug
utf8	_HOME/modules/lua/lua.luadoc	/^function utf8.char(···) end$/;"	m	
version	_HOME/modules/lua/lua.luadoc	/^function lpeg.version() end$/;"	f	class:lpeg
wrap	_HOME/modules/lua/lua.luadoc	/^function coroutine.wrap(f) end$/;"	f	class:coroutine
write	_HOME/modules/lua/lua.luadoc	/^function file:write(···) end$/;"	f	class:file
write	_HOME/modules/lua/lua.luadoc	/^function io.write(···) end$/;"	f	class:io
xor	_HOME/modules/lua/lua.luadoc	/^function bit32.xor(...) end$/;"	f	class:bit32
xpcall	_HOME/modules/lua/lua.luadoc	/^function xpcall(f, msgh [, arg1, ···]) end$/;"	f	
yield	_HOME/modules/lua/lua.luadoc	/^function coroutine.yield(···) end$/;"	f	class:coroutine